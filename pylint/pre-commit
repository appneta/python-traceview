#!/bin/bash
# Pre-commit hook passing files through jslint
#
# This ensures that all js and json files are valid and conform
# to expectations.

# Default hook
if git rev-parse --verify HEAD >/dev/null 2>&1
then
	against=HEAD
else
	# Initial commit: diff against an empty tree object
	against=4b825dc642cb6eb9a060e54bf8d69288fbee4904
fi

# If you want to allow non-ascii filenames set this variable to true.
allownonascii=true

# Cross platform projects tend to avoid non-ascii filenames; prevent
# them from being added to the repository. We exploit the fact that the
# printable range starts at the space character and ends with tilde.
if [ "$allownonascii" != "true" ] &&
	# Note that the use of brackets around a tr range is ok here, (it's
	# even required, for portability to Solaris 10's /usr/bin/tr), since
	# the square bracket bytes happen to fall in the designated range.
	test "$(git diff --cached --name-only --diff-filter=A -z $against |
	  LC_ALL=C tr -d '[ -~]\0')"
then
	echo "Error: Attempt to add a non-ascii file name."
	echo
	echo "This can cause problems if you want to work"
	echo "with people on other platforms."
	echo
	echo "To be portable it is advisable to rename the file ..."
	echo
	echo "If you know what you are doing you can disable this"
	echo "check using:"
	echo
	echo "  git config hooks.allownonascii true"
	echo
	exit 1
fi

ROOT_DIR=$(git rev-parse --show-toplevel)
JSLINT="${ROOT_DIR}/pylint/run_jslint.sh"
PYLINT="${ROOT_DIR}/pylint/run_pylint.sh"

cd $ROOT_DIR

# JSLint
RESULT=0
for file in $(git diff-index --name-only --diff-filter=ACM --cached HEAD -- | grep -P '\.((js)|(json))$'); do
    echo JSLinting $file...
    if [[ "$file" =~ "/js/lib/" ]]; then
        echo Skipping js/lib file
        continue
    fi
    if $JSLINT $file 2>&1 | grep -v 'No problems found' ; then
        RESULT=1
    fi
done

if [ $RESULT -ne 0 ]; then
    exit $RESULT
fi

# Pylint
RESULT=0
for file in $(git diff-index --name-only --diff-filter=ACM --cached HEAD -- | grep -P '\.py$'); do
    echo Pylinting $file...
    if [[ "$file" =~ "rhash.py" ]]; then
        echo Skipping rhash.py
        continue
    fi
    if [[ "$file" =~ "gen-py" ]]; then
        echo Skipping gen-py
        continue
    fi
    $PYLINT $ROOT_DIR/$file 2>&1
    if [ $? -ne 0 ]; then
        RESULT=1
    fi
done

if [ $RESULT -ne 0 ]; then
    exit $RESULT
fi

# Whitespace
exec git diff-index --check --cached $against --
